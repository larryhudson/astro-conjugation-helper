---
import { infinitiveVerbs, persons } from "@src/constants";

import { getRandomArrItem, lookupCorrectConjugation } from "@src/utils";
import { getConjugationsForVerb } from "@src/wordreference";

import Sentence from "@src/components/Sentence.astro";

let error;

const allowedConjugationTypeStrings =
    Astro.url.searchParams.getAll("conjugations") || [];

const topic = Astro.url.searchParams.get("topic");

const verb = getRandomArrItem(infinitiveVerbs);
const conjugationsForVerb = await getConjugationsForVerb({ verb });
const helpUrl = `https://www.wordreference.com/fren/${encodeURIComponent(verb)}`;
const person = getRandomArrItem(persons);

const randomConjugationTypeString = getRandomArrItem(
    allowedConjugationTypeStrings,
);

const [conjugationGroup, conjugationSubgroup] =
    randomConjugationTypeString.split("__");

const correctConjugation = lookupCorrectConjugation({
    conjugationsForVerb,
    person,
    conjugationGroup,
    conjugationSubgroup,
});
---

<div>
    <p>
        Use the <strong>{conjugationGroup} - {conjugationSubgroup}</strong> form
        of{" "}
        <strong>
            <a href={helpUrl}>{verb}</a>
        </strong>{" "}
        with the pronoun <strong>{person}</strong> to complete the sentence.
    </p>
    <Sentence
        {verb}
        {person}
        {conjugationGroup}
        {conjugationSubgroup}
        {correctConjugation}
        {topic}
    />
    <div style="margin-bottom: 2rem">
        <button id="check-button">Check</button>
        <button id="clear-button">Clear</button>
        <button id="show-answer-button">Show answer</button>
    </div>

    <button onclick="window.location.reload()">Another!</button>
</div>

<script>
    const answerInput = document.getElementById("answer-input");
    const clearButton = document.getElementById("clear-button");
    const checkButton = document.getElementById("check-button");
    const showAnswerButton = document.getElementById("show-answer-button");

    answerInput.addEventListener("input", function (event) {
        if (answerInput.value === "") {
            answerInput.style.backgroundColor = "white";
        }

        if (
            answerInput.value.toLowerCase() ===
            answerInput.dataset.answer.toLowerCase()
        ) {
            answerInput.style.backgroundColor = "lightgreen";
        } else {
            answerInput.style.backgroundColor = "white";
        }
    });

    showAnswerButton.addEventListener("click", function (event) {
        answerInput.value = answerInput.dataset.answer;
        answerInput.style.backgroundColor = "lightgreen";
    });

    clearButton.addEventListener("click", function (event) {
        event.preventDefault();
        answerInput.value = "";
        answerInput.style.backgroundColor = "white";
        answerInput.focus();
    });

    checkButton.addEventListener("click", function (event) {
        event.preventDefault();
        if (
            answerInput.value.toLowerCase() ===
            answerInput.dataset.answer.toLowerCase()
        ) {
            answerInput.style.backgroundColor = "lightgreen";
        } else {
            answerInput.style.backgroundColor = "pink";
            answerInput.focus();
        }
    });
</script>

<style>
    .question,
    button {
        font-size: 2rem;
    }

    input {
        font-size: inherit;
        text-align: center;
    }
</style>
